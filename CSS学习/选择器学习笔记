一、选择器：

疑问：
选择器属性值后面是不是可以不带；号？

1.标签选择器：
  作用：根据制定的标签，在当前界面中找到所有改名成的标签，然后设置属性
  格式：
  标签名称{
      属性：值；
  }
  例子：
  p{
      color: #ff0
  }

2.id选择器：
  作用：根据制定id找到对应的标签，然后设置属性
  格式：
      #id名称{
          属性：值；
      }
  注意点：
  2.1只能由字母 数字 下划线组成
  2.2不能由数字开头
  2.3不能是html的标签名称
  2.4在企业开发中一般情况下如果仅仅是为了设置样式，我们不会使用id，因为在前端开发中id是留给js使用

3.类选择器
  作用：根据制定类找到对应的标签，然后设置属性
  格式：
  .类名{
      属性：值；
  }
  <标签名称 class="类名1 类名2...">
  <p class="p5 p6">我是一个例子</p>
  注意点：
  3.1在同一个界面中class的名称是可以重复
  3.2在html中每个标签可以同时绑定多个类名

4.后代选择器:
  作用:找到指定标签的所有后代标签,设置属性
  格式:
  标签名称1 标签名称2{
      属性:值；
  }
  先找到所有名称叫做"标签名称1"的标签, 然后再在这个标签下面去查找所有名称叫做"标签名称2"的标签, 然后在设置属性
  div p{}
  注意点:
  4.1后代选择器必须用空格隔开
  4.2后代不仅仅是儿子, 也包括孙子/重孙子, 只要最终是放到指定标签中的都是后代
  4.3后代选择器不仅仅可以使用标签名称, 还可以使用其它选择器
  4.4后代选择器可以通过空格一直延续下去

5.子元素选择器
  作用：找到指定标签中所有特定的直接子元素，然后设置属性
  格式：
  标签名称1> 标签名称2{
      属性：值；
  }
  先找到名称叫做“标签名称1”的标签，然后在这个标签中查找所有直接子元素名称叫做“标签名称2”的元素
  注意点：
  5.1子元素选择器只会查找儿子，不会查找其他被嵌套的标签
  5.2子元素选择器之间需要用>符号连接，并且不能有空格
  5.3子元素选择器不仅仅可以使用标签名称，还可以使用其他选择器
  5.4子元素选择器可以通过>符号一直延续下去

6.交集选择器
  作用：给所有选择器选中的标签中，相交的那部分标签设置属性
  格式：
  选择器1选择器2{
      属性：值；
  }
  注意点：
  6.1选择器之间没有任何链接符号
  6.2选择器可以使用标签名称/id名称/class名称
  6.3企业开发中不常用

7.并集选择器
  作用：给所有选择器选中的标签设置属性
  格式：
  选择器1，选择器2{
      属性：值；
  }

8.相邻兄弟选择器
  作用:给指定选择器后面紧跟的那个选择器选中的标签设置属性
  格式:
  选择器1+选择器2{
      属性：值；
  }
  注意点：
  必须通过+号连接
  只能选中紧跟其后的那个标签，不能选择被隔开的标签

9.通用兄弟选择器
  作用：给指定选择器后面的所有选择器选中的所有标签设置属性
  格式：
  选择器1~选择器2{
      属性：值；
  }
  选中的是指定选择器后面某个选择器选中的所有标签，无论有没有被隔开都可以被选中

10.序选择器：
   10.1.同级别的第几个（不区分类型）
   :first-child 选中同级别中的第一个标签
   :last-child 选中同级别中的最后一个标签
   :nth-child(n) 选中同级别中的第n个标签
   :nth-last-child(n) 选中同级别中的倒数第n个标签
   :only-child 选中父元素中唯一的元素
   10.2.同类型的第几个
   :first-of-type 选中同级别同类型中的第一个标签
   :last-of-type 选中同级别同类型中的最后一个标签
   :nth-of-type(n) 选中同级别同类型中的第n个标签
   :nth-last-of-type(n) 选中同级别同类型中的倒数第n个标签
   :only-of-type 选中父元素中唯一类型的某个标签
   *补充：
   :nth-child(odd) 选中同级别中的所有奇数
   :nth-child(even) 选中同级别中的所有偶数
   :nth-child(xn+y) x和y是用户自定义的，而n是一个计数器，从0开始递增
   :nth-of-type(odd)
   :nth-of-type(even)
   :nth-of-type(xn+y)

11.属性选择器
   11.1[attribute]
   作用：根据指定的属性名称找到对应的标签，然后设置属性
   p[id]{}
   11.2[attribute=value]
   作用：找到有指定属性，并且属性的取值等于value的标签，然后设置属性
   最常见的应用场景，就是用于区分input属性
   input[type=password]{}
   <input type="text" name="" id="">
   <input type="password" name="" id="">
   <input type="radio" name="" id="">
   <input type="checkbox" name="" id="">
   *补充：
   1.属性的取值是以什么开头的
   [attribute|=value] css2
   [attribute^=value] css3
   区别：
   css2中的只能找到value开头，并且value是被-和其他内容隔开的
   css3中的只要是以value开头的都可以找到，无论有没有被-隔开
   2.属性的取值是以什么结尾的
   [attribute$=value] css3
   3.属性的取值是否包含某个特定取值的
   [attribute~=value] css2
   [attribute*=value] css3
   区别：
   css2中的只能找到独立的单词，也就是包含value，并且balue是被空格隔开的
   css3中的只要是包含value就可以找到

12.通配符选择器
   作用：给当前界面上所有的标签设置属性
   格式：
   *{
       属性：值；
   }
   注意点：
   由于通配符选择器是设置界面上所有的标签的属性，所以在设置之前会便利所有的标签，如果当前界面上的标签比较多，那么性能就会比较差，所以在企业开发中一般不会使用